#!/usr/bin/env python
from __future__ import print_function
import base64, pickle
with open('test-p.l', 'w') as f:
  print('(push :debug *features*)', file=f)
  print('(load "pickle.l")', file=f)
  print('(require :base64 "lib/llib/base64.l"))', file=f)
  data='t'
  encode='iC4='
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='nil'
  encode='KGQu'
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='123'
  encode='STEyMwou'
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='12.3'
  encode='RjEyLjMKLg=='
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='Hello World'
  encode='UydIZWxsbyBXb3JsZCcKLg=='
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='(t 123 Hello)'
  encode='KGyIYUkxMjMKYVMnSGVsbG8nCmEu'
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='((123 . Hello) (World . 12.3))'
  encode='KGRJMTIzClMnSGVsbG8nCnNTJ1dvcmxkJwpGMTIuMwpzLg=='
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='(1 2 3 (Hello World))'
  encode='KGxJMQphSTIKYUkzCmEobFMnSGVsbG8gV29ybGQnCmFhLg=='
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='((123 (1 . Hello) (World . 12.3)))'
  encode='KGRJMTIzCihkSTEKUydIZWxsbycKc1MnV29ybGQnCkYxMi4zCnNzLg=='
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  data='((1 2 3) (Hello . World))'
  encode='KGRJMQoobEkyCmFJMwphc1MnSGVsbG8nClMnV29ybGQnCnMu'
  print('(warning-message 3 "{} -> {} -> ")'.format(pickle.loads(base64.b64decode(encode)), encode, encode), file=f)
  print('(warning-message 3 "-> ~A~%" (pickle::load(user::base64decode "{}")))'.format(encode), file=f)
  print('{} -> {} -> {}'.format(data, encode, pickle.loads(base64.b64decode(encode))))
  print('(warning-message 2 "Check with protocol 0~%")', file=f)
  data=False
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data nil) (warning-message 1 "Failed to unpickle data. ~A is not equal to nil~%" data)(sys::exit -1))', file=f)
  data=None
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data nil) (warning-message 1 "Failed to unpickle data. ~A is not equal to nil~%" data)(sys::exit -1))', file=f)
  data=123
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 123) (warning-message 1 "Failed to unpickle data. ~A is not equal to  123 ~%" data)(sys::exit -1))', file=f)
  data=12345
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 12345) (warning-message 1 "Failed to unpickle data. ~A is not equal to  12345 ~%" data)(sys::exit -1))', file=f)
  data=1
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 1) (warning-message 1 "Failed to unpickle data. ~A is not equal to  1 ~%" data)(sys::exit -1))', file=f)
  data=-123
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data -123) (warning-message 1 "Failed to unpickle data. ~A is not equal to  -123 ~%" data)(sys::exit -1))', file=f)
  data=-1234
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data -1234) (warning-message 1 "Failed to unpickle data. ~A is not equal to  -1234 ~%" data)(sys::exit -1))', file=f)
  data=123456789
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 123456789) (warning-message 1 "Failed to unpickle data. ~A is not equal to  123456789 ~%" data)(sys::exit -1))', file=f)
  data=1234567898786432101234
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 1234567898786432101234) (warning-message 1 "Failed to unpickle data. ~A is not equal to 1234567898786432101234~%" data)(sys::exit -1))', file=f)
  data=(1, 2, 3)
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3)) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3)~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3]
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3)) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3)~%" data)(sys::exit -1))', file=f)
  data="Hello\nWorld"
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data "Hello\nWorld") (warning-message 1 "Failed to unpickle data. ~A is not equal to  \ Hello\\nWorld\  ~%" data)(sys::exit -1))', file=f)
  data="0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World.."
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data "0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World..") (warning-message 1 "Failed to unpickle data. ~A is not equal to  \ 0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World..\  ~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3, ['Hello', 'World']]
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=(1, 2, 3, ('Hello', 'World'))
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3, {'Hello': 'World'}]
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 (("Hello" . "World")))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 (( Hello  .  World )))~%" data)(sys::exit -1))', file=f)
  data=[[1, 2, 3], ['Hello', 'World']]
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((1 2 3) ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((1 2 3) ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=[[1, 2, 3], {'Hello': 'World'}]
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((1 2 3) (("Hello" . "World")))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((1 2 3) (( Hello  .  World )))~%" data)(sys::exit -1))', file=f)
  data={123 : 'Hello', 'World': 12.3}
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(("World" . 12.3) (123 . "Hello"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (( World  . 12.3) (123 .  Hello ))~%" data)(sys::exit -1))', file=f)
  data={123 : {1: 'Hello', 'World': 12.3}}
  encode=base64.b64encode(pickle.dumps(data, protocol=0))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((123 (1 . "Hello") ("World" . 12.3)))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((123 (1 .  Hello ) ( World  . 12.3)))~%" data)(sys::exit -1))', file=f)
  print('(warning-message 2 "Check with protocol 1~%")', file=f)
  data=False
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data nil) (warning-message 1 "Failed to unpickle data. ~A is not equal to nil~%" data)(sys::exit -1))', file=f)
  data=None
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data nil) (warning-message 1 "Failed to unpickle data. ~A is not equal to nil~%" data)(sys::exit -1))', file=f)
  data=123
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 123) (warning-message 1 "Failed to unpickle data. ~A is not equal to  123 ~%" data)(sys::exit -1))', file=f)
  data=12345
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 12345) (warning-message 1 "Failed to unpickle data. ~A is not equal to  12345 ~%" data)(sys::exit -1))', file=f)
  data=1
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 1) (warning-message 1 "Failed to unpickle data. ~A is not equal to  1 ~%" data)(sys::exit -1))', file=f)
  data=-123
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data -123) (warning-message 1 "Failed to unpickle data. ~A is not equal to  -123 ~%" data)(sys::exit -1))', file=f)
  data=-1234
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data -1234) (warning-message 1 "Failed to unpickle data. ~A is not equal to  -1234 ~%" data)(sys::exit -1))', file=f)
  data=123456789
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 123456789) (warning-message 1 "Failed to unpickle data. ~A is not equal to  123456789 ~%" data)(sys::exit -1))', file=f)
  data=1234567898786432101234
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 1234567898786432101234) (warning-message 1 "Failed to unpickle data. ~A is not equal to 1234567898786432101234~%" data)(sys::exit -1))', file=f)
  data=(1, 2, 3)
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3)) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3)~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3]
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3)) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3)~%" data)(sys::exit -1))', file=f)
  data="Hello\nWorld"
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data "Hello\nWorld") (warning-message 1 "Failed to unpickle data. ~A is not equal to  \ Hello\\nWorld\  ~%" data)(sys::exit -1))', file=f)
  data="0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World.."
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data "0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World..") (warning-message 1 "Failed to unpickle data. ~A is not equal to  \ 0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World..\  ~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3, ['Hello', 'World']]
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=(1, 2, 3, ('Hello', 'World'))
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3, {'Hello': 'World'}]
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 (("Hello" . "World")))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 (( Hello  .  World )))~%" data)(sys::exit -1))', file=f)
  data=[[1, 2, 3], ['Hello', 'World']]
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((1 2 3) ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((1 2 3) ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=[[1, 2, 3], {'Hello': 'World'}]
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((1 2 3) (("Hello" . "World")))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((1 2 3) (( Hello  .  World )))~%" data)(sys::exit -1))', file=f)
  data={123 : 'Hello', 'World': 12.3}
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(("World" . 12.3) (123 . "Hello"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (( World  . 12.3) (123 .  Hello ))~%" data)(sys::exit -1))', file=f)
  data={123 : {1: 'Hello', 'World': 12.3}}
  encode=base64.b64encode(pickle.dumps(data, protocol=1))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((123 (1 . "Hello") ("World" . 12.3)))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((123 (1 .  Hello ) ( World  . 12.3)))~%" data)(sys::exit -1))', file=f)
  print('(warning-message 2 "Check with protocol 2~%")', file=f)
  data=False
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data nil) (warning-message 1 "Failed to unpickle data. ~A is not equal to nil~%" data)(sys::exit -1))', file=f)
  data=None
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data nil) (warning-message 1 "Failed to unpickle data. ~A is not equal to nil~%" data)(sys::exit -1))', file=f)
  data=123
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 123) (warning-message 1 "Failed to unpickle data. ~A is not equal to  123 ~%" data)(sys::exit -1))', file=f)
  data=12345
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 12345) (warning-message 1 "Failed to unpickle data. ~A is not equal to  12345 ~%" data)(sys::exit -1))', file=f)
  data=1
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 1) (warning-message 1 "Failed to unpickle data. ~A is not equal to  1 ~%" data)(sys::exit -1))', file=f)
  data=-123
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data -123) (warning-message 1 "Failed to unpickle data. ~A is not equal to  -123 ~%" data)(sys::exit -1))', file=f)
  data=-1234
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data -1234) (warning-message 1 "Failed to unpickle data. ~A is not equal to  -1234 ~%" data)(sys::exit -1))', file=f)
  data=123456789
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 123456789) (warning-message 1 "Failed to unpickle data. ~A is not equal to  123456789 ~%" data)(sys::exit -1))', file=f)
  data=1234567898786432101234
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data 1234567898786432101234) (warning-message 1 "Failed to unpickle data. ~A is not equal to 1234567898786432101234~%" data)(sys::exit -1))', file=f)
  data=(1, 2, 3)
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3)) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3)~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3]
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3)) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3)~%" data)(sys::exit -1))', file=f)
  data="Hello\nWorld"
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data "Hello\nWorld") (warning-message 1 "Failed to unpickle data. ~A is not equal to  \ Hello\\nWorld\  ~%" data)(sys::exit -1))', file=f)
  data="0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World.."
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data "0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World..") (warning-message 1 "Failed to unpickle data. ~A is not equal to  \ 0 Hello World..1 Hello World..2 Hello World..3 Hello World..4 Hello World..5 Hello World..6 Hello World..\  ~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3, ['Hello', 'World']]
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=(1, 2, 3, ('Hello', 'World'))
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=[1, 2, 3, {'Hello': 'World'}]
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(1 2 3 (("Hello" . "World")))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (1 2 3 (( Hello  .  World )))~%" data)(sys::exit -1))', file=f)
  data=[[1, 2, 3], ['Hello', 'World']]
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((1 2 3) ("Hello" "World"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((1 2 3) ( Hello   World ))~%" data)(sys::exit -1))', file=f)
  data=[[1, 2, 3], {'Hello': 'World'}]
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((1 2 3) (("Hello" . "World")))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((1 2 3) (( Hello  .  World )))~%" data)(sys::exit -1))', file=f)
  data={123 : 'Hello', 'World': 12.3}
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'(("World" . 12.3) (123 . "Hello"))) (warning-message 1 "Failed to unpickle data. ~A is not equal to (( World  . 12.3) (123 .  Hello ))~%" data)(sys::exit -1))', file=f)
  data={123 : {1: 'Hello', 'World': 12.3}}
  encode=base64.b64encode(pickle.dumps(data, protocol=2))
  print('(warning-message 3 "{} -> {} -> ")'.format(data, encode), file=f)
  print('(setq data (pickle::load (user::base64decode "{}")))'.format(encode), file=f)
  print('(warning-message 3 "~A~%" data)', file=f)
  print('(unless (equal data \'((123 (1 . "Hello") ("World" . 12.3)))) (warning-message 1 "Failed to unpickle data. ~A is not equal to ((123 (1 .  Hello ) ( World  . 12.3)))~%" data)(sys::exit -1))', file=f)
  print('(exit)', file=f)
