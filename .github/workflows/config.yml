on:
  push:
    branches:
      - master
  pull_request:

env:
  DISPLAY: ':0.0'

jobs:
#   ros:
#     runs-on: ubuntu-latest
# #    continue-on-error: ${{ matrix.experimental }}
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           # - ROS_DISTRO: indigo
#           #   CONTAINER: jskrobotics/ros-ubuntu:14.04
#           #   USE_DEB: true
#           # - ROS_DISTRO: indigo
#           #   CONTAINER: jskrobotics/ros-ubuntu:14.04
#           #   USE_DEB: false
#           #   NOT_TEST_INSTALL : true
#           #   INSTALL_SRC : "http://github.com/jsk-ros-pkg/jsk_planning"
#           #   TEST_PKGS : "task_compiler"
#           # - ROS_DISTRO: indigo
#           #   CONTAINER: jskrobotics/ros-ubuntu:14.04
#           #   USE_DEB: false
#           #   NOT_TEST_INSTALL : true
#           #   INSTALL_SRC : "http://github.com/jsk-ros-pkg/jsk_pr2eus"
#           #   TEST_PKGS : "pr2eus pr2eus_moveit"
#           #   BEFORE_SCRIPT: "echo 'deb http://packages.osrfoundation.org/gazebo/ubuntu trusty main' | sudo tee /etc/apt/sources.list.d/gazebo-stable.list; wget --no-check-certificate https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -; sudo apt update -y; sudo apt dist-upgrade -y; mkdir -p ~/.gazebo/; git clone --depth=1 https://github.com/osrf/gazebo_models.git ~/.gazebo/models"
#           # - ROS_DISTRO: indigo
#           #   CONTAINER: jskrobotics/ros-ubuntu:14.04
#           #   USE_DEB: false
#           #   NOT_TEST_INSTALL : false
#           #   BEFORE_SCRIPT: "wget https://raw.githubusercontent.com/tork-a/jskeus-release/master/patches/CMakeLists.txt -O jskeus/CMakeLists.txt"
#           # - ROS_DISTRO: indigo
#           #   CONTAINER: jskrobotics/ros-ubuntu:14.04
#           #   USE_DEB: source
#           #   NOT_TEST_INSTALL : false
#           # - ROS_DISTRO: kinetic
#           #   CONTAINER: ubuntu:16.04
#           #   USE_DEB: true
#           # - ROS_DISTRO: kinetic
#           #   CONTAINER: ubuntu:16.04
#           #   USE_DEB: false
#           #   NOT_TEST_INSTALL : true
#           #   INSTALL_SRC : "http://github.com/jsk-ros-pkg/jsk_planning"
#           #   TEST_PKGS : "task_compiler"
#           # - ROS_DISTRO: kinetic
#           #   CONTAINER: ubuntu:16.04
#           #   USE_DEB: false
#           #   NOT_TEST_INSTALL : true
#           #   INSTALL_SRC : "http://github.com/jsk-ros-pkg/jsk_pr2eus"
#           #   TEST_PKGS : "pr2eus pr2eus_moveit"
#           #   BEFORE_SCRIPT: "echo 'deb http://packages.osrfoundation.org/gazebo/ubuntu xenial main' | sudo tee /etc/apt/sources.list.d/gazebo-stable.list; wget --no-check-certificate https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -; sudo apt update -y"
#           # - ROS_DISTRO: kinetic
#           #   CONTAINER: ubuntu:16.04
#           #   USE_DEB: false
#           #   NOT_TEST_INSTALL : true
#           # - ROS_DISTRO: kinetic
#           #   CONTAINER: ubuntu:16.04
#           #   USE_DEB: source
#           #   NOT_TEST_INSTALL : true
#           # - ROS_DISTRO: melodic
#           #   CONTAINER: ubuntu:18.04
#           #   USE_DEB: true
#           # - ROS_DISTRO: melodic
#           #   CONTAINER: ubuntu:18.04
#           #   USE_DEB: false
#           #   NOT_TEST_INSTALL : true
#           # - ROS_DISTRO: melodic
#           #   CONTAINER: ubuntu:18.04
#           #   USE_DEB: source
#           #   NOT_TEST_INSTALL : true
#           # - ROS_DISTRO: noetic
#           #   CONTAINER: ubuntu:20.04
#           #   USE_DEB: true
#           # # - ROS_DISTRO: noetic
#           # #   CONTAINER: ubuntu:20.04
#           # #   USE_DEB: false
#           # #   NOT_TEST_INSTALL : true
#           # #   INSTALL_SRC : "http://github.com/jsk-ros-pkg/jsk_planning"
#           # #   TEST_PKGS : "task_compiler"
#           # #   experimental: true
#           # # - ROS_DISTRO: noetic
#           # #   CONTAINER: ubuntu:20.04
#           # #   USE_DEB: false
#           # #   NOT_TEST_INSTALL : true
#           # #   INSTALL_SRC : "http://github.com/jsk-ros-pkg/jsk_pr2eus"
#           # #   TEST_PKGS : "pr2eus pr2eus_moveit"
#           # #   experimental: true
#           # - ROS_DISTRO: noetic
#           #   CONTAINER: ubuntu:20.04
#           #   USE_DEB: false
#           #   NOT_TEST_INSTALL : true
#           # - ROS_DISTRO: noetic
#           #   CONTAINER: ubuntu:20.04
#           #   USE_DEB: source
#           #   NOT_TEST_INSTALL : true


#     container: ${{ matrix.CONTAINER }}
#     steps:
#       - name: Install latest git ( use sudo for ros-ubuntu )
#         run: |
#           (apt-get update && apt-get install -y sudo) || echo "OK"
#           sudo apt-get update && sudo apt-get install -y software-properties-common && sudo apt-get update && sudo add-apt-repository -y ppa:git-core/ppa && sudo apt-get update && sudo apt-get install -y git

#       - name: work around permission issue  # https://github.com/actions/checkout/issues/760#issuecomment-1097501613
#         run: |
#           set -x
#           export USER=$(whoami)
#           if [ "${{ matrix.CONTAINER }}" = "jskrobotics/ros-ubuntu:14.04" ]; then
#              git config --global --add safe.directory $GITHUB_WORKSPACE || echo "OK" # Show 'could not lock config file /github/home/.gitconfig: Permission denied', but it is ok
#              sudo mkdir -p /__w/
#              sudo chmod 777 -R /__w/
#              sudo chown -R $USER $HOME
#              # sudo mkdir -p /home/runner/work/_temp/_github_workflow/
#              # sudo chown -R $USER $HOME /home/runner/work/_temp/_github_workflow/
#              # ls -al /home/runner/work/_temp/_github_workflow/
#           else
#              git config --global --add safe.directory $GITHUB_WORKSPACE
#           fi

#       - name: Chcekout
#         uses: actions/checkout@v2

#       - name: Start X server
#         if: ${{ matrix.ROS_DISTRO == 'kinetic' && matrix.TEST_PKGS == 'pr2eus pr2eus_moveit' }}

#         run: |
#           echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections || echo "failing on ros-ubuntu is OK" # set non interactive tzdata https://stackoverflow.com/questions/8671308/non-interactive-method-for-dpkg-reconfigure-tzdata
#           sudo apt-get -y -qq install mesa-utils x11-xserver-utils xserver-xorg-video-dummy wget
#           export DISPLAY=:0
#           wget https://raw.githubusercontent.com/jsk-ros-pkg/jsk_travis/master/dummy.xorg.conf -O /tmp/dummy.xorg.conf
#           sudo Xorg -noreset +extension GLX +extension RANDR +extension RENDER -logfile /tmp/xorg.log -config /tmp/dummy.xorg.conf $DISPLAY &
#           sleep 3 # wait x server up
#           export QT_X11_NO_MITSHM=1 # http://wiki.ros.org/docker/Tutorials/GUI
#           xhost +local:root

#       - name: Fix geneus source tree
#         run: |
#           sed -i "s@http://github.com/jsk-ros-pkg/geneus@http://github.com/tork-a/geneus-release.git\n    version:\ release/indigo/geneus@" .travis.rosinstall
#           cat .travis.rosinstall
#           sed -i "s@jsk-ros-pkg/geneus@tork-a/geneus-release@" setup_upstream.sh
#           sed -i "/^wstool update/a (cd \$WORKSPACE/src/geneus; git checkout release/indigo/geneus)" setup_upstream.sh
#           cat setup_upstream.sh
#         if: ${{ matrix.ROS_DISTRO }} == "indigo" && ${{ matrix.USE_DEB }} == "false"

#       - name: Install src
#         run: |
#           export INSTALL_SRC="${{ matrix.INSTALL_SRC }}"
#           sudo apt-get install -y -qq python-yaml
#           sudo apt-get install -y -qq python-is-python3 python3-yaml || echo "OK" # for 20.04
#           rm .travis.rosinstall
#           for src in $INSTALL_SRC; do name=`basename $src`; python -c "import yaml;print(yaml.dump([{'git':{'uri':'$src','local-name':'$name'}}], default_flow_style=False))" >> .travis.rosinstall; done;
#           cat .travis.rosinstall
#         if: "matrix.INSTALL_SRC != ''"

#       - name: Run jsk_travis
#         uses: jsk-ros-pkg/jsk_travis@master
#         with:
#           ROS_PARALLEL_JOBS : "-j1"
#           CATKIN_PARALLEL_JOBS : "-p2"
#           ROS_PARALLEL_TEST_JOBS : "-j1"
#           CATKIN_PARALLEL_TEST_JOBS : "-p2"
#           ROS_DISTRO : ${{ matrix.ROS_DISTRO }}
#           USE_DEB :  ${{ matrix.USE_DEB }}
#           NOT_TEST_INSTALL : ${{ matrix.NOT_TEST_INSTALL }}
#           TEST_PKGS : ${{ matrix.TEST_PKGS }}
#           BEFORE_SCRIPT : ${{ matrix.BEFORE_SCRIPT }}

  arm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # arm
          - ROS_DISTRO: melodic
            CONTAINER: ubuntu:18.04
            ARCH: aarch64
          - ROS_DISTRO: melodic
            CONTAINER: ubuntu:18.04
            ARCH: armv7

    steps:
      - uses: actions/checkout@v2.1.0
        with:
          submodules: 'true'
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        with:
          arch: ${{ matrix.ARCH }}
          distro: ${{ matrix.CONTAINER }}
          install: |
            apt-get update -q -y
            apt-get install -q -y git sudo wget curl
          run: |
            export EXTRA_DEB=${{ matrix.EXTRA_DEB }}
            export ROS_DISTRO=${{ matrix.ROS_DISTRO }}
            export ROS_PARALLEL_TEST_JOBS="-j8"
            export CATKIN_PARALLEL_JOBS="-i"
            export USE_TRAVIS=true
            export USE_DOCKER=false
            export NOT_TEST_INSTALL=true
            set +o nounset
            source .travis/travis.sh
